names(Ydataframecol)=toString(HeuristicNames[i])
}
XYCoordinates<-cbind(XYCoordinates,Ydataframecol)
}
print(XYCoordinates)
}
#Now we plot the data
DataFrame<-XYCoordinates
print(DataFrame)
MeltedDataFrame<-melt(DataFrame,id="XCoordinates")
print(MeltedDataFrame)
if(SaveTexImage)
{
tikz(file=paste("/local/pmxtol/Dropbox/",toString(FileName),".tex",sep=""),width=Size[1],height=Size[2])
}
Plot<-ggplot(MeltedDataFrame,aes(x=XCoordinates,y=value,color=Variable),show.legend='True') + #geom_point()+
geom_line() +xlab("Percentage Error")+ylab("Frequency Density") + labs(aesthetic='custom text')
if(SaveTexImage)
{
print(Plot)
dev.off()
}
print(Plot)
return(Plot)
}
PlotMultipleHeuristicErrorData(DecodedDataForReport[c(1,3,5),],100,100,c("Depth 1","Depth 2","Depth 3"),SaveTexImage = T,FileName = "OldPlainPenaltyHeuristicOnComplete",Size=c(5,3))
#Plot a group of heuristics
#Note the heuristic erros should be provided in a matrix of rows for each heuristic
PlotMultipleHeuristicErrorData<-function(HeuristicErrors,NumberOfCategories,MaxErrorCategory,HeuristicNames=NULL,SaveTexImage=F,FileName=NULL,Size=c(3,2))
{
#First we look at how many graphs we are going to plot
NumHeuristics=nrow(HeuristicErrors)
XCoordinates=matrix(0,ncol=length(CategorizeHeuristicErrorData(HeuristicErrors[1,],NumberOfCategories,MaxErrorCategory)$NumberInEachCategory),nrow=NumHeuristics)
YCoordinates=matrix(0,ncol=length(CategorizeHeuristicErrorData(HeuristicErrors[1,],NumberOfCategories,MaxErrorCategory)$NumberInEachCategory),nrow=NumHeuristics)
#Now categorize the data
for(i in 1:NumHeuristics)
{
if(i==1)
{
#Initialize
Categorized=CategorizeHeuristicErrorData(HeuristicErrors[i,],NumberOfCategories,MaxErrorCategory)
YCoordinates=matrix(0,ncol=length(Categorized$NumberInEachCategory),nrow=NumHeuristics)
XCoordinates=Categorized$CategoryMidPoints
YCoordinates[i,]=Categorized$NumberInEachCategory
YCoordinates[i,]=YCoordinates[i,]/sum(YCoordinates[i,])
Ydataframecol<-data.frame(YCoordinates[i,])
if(is.null(HeuristicNames))
{
names(Ydataframecol)=paste("YCoordinates",toString(i))
}
else
{
names(Ydataframecol)=toString(HeuristicNames[i])
}
XYCoordinates=data.frame(XCoordinates)
XYCoordinates<-cbind(XYCoordinates,Ydataframecol)
}
else
{
Categorized=CategorizeHeuristicErrorData(HeuristicErrors[i,],NumberOfCategories,MaxErrorCategory)
YCoordinates[i,]=Categorized$NumberInEachCategory
YCoordinates[i,]=YCoordinates[i,]/sum(YCoordinates[i,])
Ydataframecol<-data.frame(YCoordinates[i,])
if(is.null(HeuristicNames))
{
names(Ydataframecol)=paste("YCoordinates",toString(i))
}
else
{
names(Ydataframecol)=toString(HeuristicNames[i])
}
XYCoordinates<-cbind(XYCoordinates,Ydataframecol)
}
print(XYCoordinates)
}
#Now we plot the data
DataFrame<-XYCoordinates
print(DataFrame)
MeltedDataFrame<-melt(DataFrame,id="XCoordinates")
print(MeltedDataFrame)
if(SaveTexImage)
{
tikz(file=paste("/local/pmxtol/Dropbox/",toString(FileName),".tex",sep=""),width=Size[1],height=Size[2])
}
Plot<-ggplot(MeltedDataFrame,aes(x=XCoordinates,y=value,color=variable),show.legend='True') + #geom_point()+
geom_line() +xlab("Percentage Error")+ylab("Frequency Density") + labs(variable='custom text')
if(SaveTexImage)
{
print(Plot)
dev.off()
}
print(Plot)
return(Plot)
}
PlotMultipleHeuristicErrorData(DecodedDataForReport[c(1,3,5),],100,100,c("Depth 1","Depth 2","Depth 3"),SaveTexImage = T,FileName = "OldPlainPenaltyHeuristicOnComplete",Size=c(5,3))
#Plot a group of heuristics
#Note the heuristic erros should be provided in a matrix of rows for each heuristic
PlotMultipleHeuristicErrorData<-function(HeuristicErrors,NumberOfCategories,MaxErrorCategory,HeuristicNames=NULL,SaveTexImage=F,FileName=NULL,Size=c(3,2))
{
#First we look at how many graphs we are going to plot
NumHeuristics=nrow(HeuristicErrors)
XCoordinates=matrix(0,ncol=length(CategorizeHeuristicErrorData(HeuristicErrors[1,],NumberOfCategories,MaxErrorCategory)$NumberInEachCategory),nrow=NumHeuristics)
YCoordinates=matrix(0,ncol=length(CategorizeHeuristicErrorData(HeuristicErrors[1,],NumberOfCategories,MaxErrorCategory)$NumberInEachCategory),nrow=NumHeuristics)
#Now categorize the data
for(i in 1:NumHeuristics)
{
if(i==1)
{
#Initialize
Categorized=CategorizeHeuristicErrorData(HeuristicErrors[i,],NumberOfCategories,MaxErrorCategory)
YCoordinates=matrix(0,ncol=length(Categorized$NumberInEachCategory),nrow=NumHeuristics)
XCoordinates=Categorized$CategoryMidPoints
YCoordinates[i,]=Categorized$NumberInEachCategory
YCoordinates[i,]=YCoordinates[i,]/sum(YCoordinates[i,])
Ydataframecol<-data.frame(YCoordinates[i,])
if(is.null(HeuristicNames))
{
names(Ydataframecol)=paste("YCoordinates",toString(i))
}
else
{
names(Ydataframecol)=toString(HeuristicNames[i])
}
XYCoordinates=data.frame(XCoordinates)
XYCoordinates<-cbind(XYCoordinates,Ydataframecol)
}
else
{
Categorized=CategorizeHeuristicErrorData(HeuristicErrors[i,],NumberOfCategories,MaxErrorCategory)
YCoordinates[i,]=Categorized$NumberInEachCategory
YCoordinates[i,]=YCoordinates[i,]/sum(YCoordinates[i,])
Ydataframecol<-data.frame(YCoordinates[i,])
if(is.null(HeuristicNames))
{
names(Ydataframecol)=paste("YCoordinates",toString(i))
}
else
{
names(Ydataframecol)=toString(HeuristicNames[i])
}
XYCoordinates<-cbind(XYCoordinates,Ydataframecol)
}
print(XYCoordinates)
}
#Now we plot the data
DataFrame<-XYCoordinates
print(DataFrame)
MeltedDataFrame<-melt(DataFrame,id="XCoordinates")
print(MeltedDataFrame)
if(SaveTexImage)
{
tikz(file=paste("/local/pmxtol/Dropbox/",toString(FileName),".tex",sep=""),width=Size[1],height=Size[2])
}
Plot<-ggplot(MeltedDataFrame,aes(x=XCoordinates,y=value,color=variable),show.legend='True') + #geom_point()+
geom_line() +xlab("Percentage Error")+ylab("Frequency Density") + lguide_lengend(title="Heuristic Type")
if(SaveTexImage)
{
print(Plot)
dev.off()
}
print(Plot)
return(Plot)
}
PlotMultipleHeuristicErrorData(DecodedDataForReport[c(1,3,5),],100,100,c("Depth 1","Depth 2","Depth 3"),SaveTexImage = T,FileName = "OldPlainPenaltyHeuristicOnComplete",Size=c(5,3))
#Plot a group of heuristics
#Note the heuristic erros should be provided in a matrix of rows for each heuristic
PlotMultipleHeuristicErrorData<-function(HeuristicErrors,NumberOfCategories,MaxErrorCategory,HeuristicNames=NULL,SaveTexImage=F,FileName=NULL,Size=c(3,2))
{
#First we look at how many graphs we are going to plot
NumHeuristics=nrow(HeuristicErrors)
XCoordinates=matrix(0,ncol=length(CategorizeHeuristicErrorData(HeuristicErrors[1,],NumberOfCategories,MaxErrorCategory)$NumberInEachCategory),nrow=NumHeuristics)
YCoordinates=matrix(0,ncol=length(CategorizeHeuristicErrorData(HeuristicErrors[1,],NumberOfCategories,MaxErrorCategory)$NumberInEachCategory),nrow=NumHeuristics)
#Now categorize the data
for(i in 1:NumHeuristics)
{
if(i==1)
{
#Initialize
Categorized=CategorizeHeuristicErrorData(HeuristicErrors[i,],NumberOfCategories,MaxErrorCategory)
YCoordinates=matrix(0,ncol=length(Categorized$NumberInEachCategory),nrow=NumHeuristics)
XCoordinates=Categorized$CategoryMidPoints
YCoordinates[i,]=Categorized$NumberInEachCategory
YCoordinates[i,]=YCoordinates[i,]/sum(YCoordinates[i,])
Ydataframecol<-data.frame(YCoordinates[i,])
if(is.null(HeuristicNames))
{
names(Ydataframecol)=paste("YCoordinates",toString(i))
}
else
{
names(Ydataframecol)=toString(HeuristicNames[i])
}
XYCoordinates=data.frame(XCoordinates)
XYCoordinates<-cbind(XYCoordinates,Ydataframecol)
}
else
{
Categorized=CategorizeHeuristicErrorData(HeuristicErrors[i,],NumberOfCategories,MaxErrorCategory)
YCoordinates[i,]=Categorized$NumberInEachCategory
YCoordinates[i,]=YCoordinates[i,]/sum(YCoordinates[i,])
Ydataframecol<-data.frame(YCoordinates[i,])
if(is.null(HeuristicNames))
{
names(Ydataframecol)=paste("YCoordinates",toString(i))
}
else
{
names(Ydataframecol)=toString(HeuristicNames[i])
}
XYCoordinates<-cbind(XYCoordinates,Ydataframecol)
}
print(XYCoordinates)
}
#Now we plot the data
DataFrame<-XYCoordinates
print(DataFrame)
MeltedDataFrame<-melt(DataFrame,id="XCoordinates")
print(MeltedDataFrame)
if(SaveTexImage)
{
tikz(file=paste("/local/pmxtol/Dropbox/",toString(FileName),".tex",sep=""),width=Size[1],height=Size[2])
}
Plot<-ggplot(MeltedDataFrame,aes(x=XCoordinates,y=value,color=variable),show.legend='True') + #geom_point()+
geom_line() +xlab("Percentage Error")+ylab("Frequency Density") + guide_lengend(title="Heuristic Type")
if(SaveTexImage)
{
print(Plot)
dev.off()
}
print(Plot)
return(Plot)
}
PlotMultipleHeuristicErrorData(DecodedDataForReport[c(1,3,5),],100,100,c("Depth 1","Depth 2","Depth 3"),SaveTexImage = T,FileName = "OldPlainPenaltyHeuristicOnComplete",Size=c(5,3))
#Plot a group of heuristics
#Note the heuristic erros should be provided in a matrix of rows for each heuristic
PlotMultipleHeuristicErrorData<-function(HeuristicErrors,NumberOfCategories,MaxErrorCategory,HeuristicNames=NULL,SaveTexImage=F,FileName=NULL,Size=c(3,2))
{
#First we look at how many graphs we are going to plot
NumHeuristics=nrow(HeuristicErrors)
XCoordinates=matrix(0,ncol=length(CategorizeHeuristicErrorData(HeuristicErrors[1,],NumberOfCategories,MaxErrorCategory)$NumberInEachCategory),nrow=NumHeuristics)
YCoordinates=matrix(0,ncol=length(CategorizeHeuristicErrorData(HeuristicErrors[1,],NumberOfCategories,MaxErrorCategory)$NumberInEachCategory),nrow=NumHeuristics)
#Now categorize the data
for(i in 1:NumHeuristics)
{
if(i==1)
{
#Initialize
Categorized=CategorizeHeuristicErrorData(HeuristicErrors[i,],NumberOfCategories,MaxErrorCategory)
YCoordinates=matrix(0,ncol=length(Categorized$NumberInEachCategory),nrow=NumHeuristics)
XCoordinates=Categorized$CategoryMidPoints
YCoordinates[i,]=Categorized$NumberInEachCategory
YCoordinates[i,]=YCoordinates[i,]/sum(YCoordinates[i,])
Ydataframecol<-data.frame(YCoordinates[i,])
if(is.null(HeuristicNames))
{
names(Ydataframecol)=paste("YCoordinates",toString(i))
}
else
{
names(Ydataframecol)=toString(HeuristicNames[i])
}
XYCoordinates=data.frame(XCoordinates)
XYCoordinates<-cbind(XYCoordinates,Ydataframecol)
}
else
{
Categorized=CategorizeHeuristicErrorData(HeuristicErrors[i,],NumberOfCategories,MaxErrorCategory)
YCoordinates[i,]=Categorized$NumberInEachCategory
YCoordinates[i,]=YCoordinates[i,]/sum(YCoordinates[i,])
Ydataframecol<-data.frame(YCoordinates[i,])
if(is.null(HeuristicNames))
{
names(Ydataframecol)=paste("YCoordinates",toString(i))
}
else
{
names(Ydataframecol)=toString(HeuristicNames[i])
}
XYCoordinates<-cbind(XYCoordinates,Ydataframecol)
}
print(XYCoordinates)
}
#Now we plot the data
DataFrame<-XYCoordinates
print(DataFrame)
MeltedDataFrame<-melt(DataFrame,id="XCoordinates")
print(MeltedDataFrame)
if(SaveTexImage)
{
tikz(file=paste("/local/pmxtol/Dropbox/",toString(FileName),".tex",sep=""),width=Size[1],height=Size[2])
}
Plot<-ggplot(MeltedDataFrame,aes(x=XCoordinates,y=value,color=variable),show.legend='True') + #geom_point()+
geom_line() +xlab("Percentage Error")+ylab("Frequency Density") + scale_fill_continuous(guide = guide_legend(title = "V"))
if(SaveTexImage)
{
print(Plot)
dev.off()
}
print(Plot)
return(Plot)
}
PlotMultipleHeuristicErrorData(DecodedDataForReport[c(1,3,5),],100,100,c("Depth 1","Depth 2","Depth 3"),SaveTexImage = T,FileName = "OldPlainPenaltyHeuristicOnComplete",Size=c(5,3))
#Plot a group of heuristics
#Note the heuristic erros should be provided in a matrix of rows for each heuristic
PlotMultipleHeuristicErrorData<-function(HeuristicErrors,NumberOfCategories,MaxErrorCategory,HeuristicNames=NULL,SaveTexImage=F,FileName=NULL,Size=c(3,2))
{
#First we look at how many graphs we are going to plot
NumHeuristics=nrow(HeuristicErrors)
XCoordinates=matrix(0,ncol=length(CategorizeHeuristicErrorData(HeuristicErrors[1,],NumberOfCategories,MaxErrorCategory)$NumberInEachCategory),nrow=NumHeuristics)
YCoordinates=matrix(0,ncol=length(CategorizeHeuristicErrorData(HeuristicErrors[1,],NumberOfCategories,MaxErrorCategory)$NumberInEachCategory),nrow=NumHeuristics)
#Now categorize the data
for(i in 1:NumHeuristics)
{
if(i==1)
{
#Initialize
Categorized=CategorizeHeuristicErrorData(HeuristicErrors[i,],NumberOfCategories,MaxErrorCategory)
YCoordinates=matrix(0,ncol=length(Categorized$NumberInEachCategory),nrow=NumHeuristics)
XCoordinates=Categorized$CategoryMidPoints
YCoordinates[i,]=Categorized$NumberInEachCategory
YCoordinates[i,]=YCoordinates[i,]/sum(YCoordinates[i,])
Ydataframecol<-data.frame(YCoordinates[i,])
if(is.null(HeuristicNames))
{
names(Ydataframecol)=paste("YCoordinates",toString(i))
}
else
{
names(Ydataframecol)=toString(HeuristicNames[i])
}
XYCoordinates=data.frame(XCoordinates)
XYCoordinates<-cbind(XYCoordinates,Ydataframecol)
}
else
{
Categorized=CategorizeHeuristicErrorData(HeuristicErrors[i,],NumberOfCategories,MaxErrorCategory)
YCoordinates[i,]=Categorized$NumberInEachCategory
YCoordinates[i,]=YCoordinates[i,]/sum(YCoordinates[i,])
Ydataframecol<-data.frame(YCoordinates[i,])
if(is.null(HeuristicNames))
{
names(Ydataframecol)=paste("YCoordinates",toString(i))
}
else
{
names(Ydataframecol)=toString(HeuristicNames[i])
}
XYCoordinates<-cbind(XYCoordinates,Ydataframecol)
}
print(XYCoordinates)
}
#Now we plot the data
DataFrame<-XYCoordinates
print(DataFrame)
MeltedDataFrame<-melt(DataFrame,id="XCoordinates")
print(MeltedDataFrame)
if(SaveTexImage)
{
tikz(file=paste("/local/pmxtol/Dropbox/",toString(FileName),".tex",sep=""),width=Size[1],height=Size[2])
}
Plot<-ggplot(MeltedDataFrame,aes(x=XCoordinates,y=value,color=variable),show.legend='True') + #geom_point()+
geom_line() +xlab("Percentage Error")+ylab("Frequency Density") + scale_fill_discrete(guide = guide_legend(title = "V"))
if(SaveTexImage)
{
print(Plot)
dev.off()
}
print(Plot)
return(Plot)
}
PlotMultipleHeuristicErrorData(DecodedDataForReport[c(1,3,5),],100,100,c("Depth 1","Depth 2","Depth 3"),SaveTexImage = T,FileName = "OldPlainPenaltyHeuristicOnComplete",Size=c(5,3))
#Plot a group of heuristics
#Note the heuristic erros should be provided in a matrix of rows for each heuristic
PlotMultipleHeuristicErrorData<-function(HeuristicErrors,NumberOfCategories,MaxErrorCategory,HeuristicNames=NULL,SaveTexImage=F,FileName=NULL,Size=c(3,2))
{
#First we look at how many graphs we are going to plot
NumHeuristics=nrow(HeuristicErrors)
XCoordinates=matrix(0,ncol=length(CategorizeHeuristicErrorData(HeuristicErrors[1,],NumberOfCategories,MaxErrorCategory)$NumberInEachCategory),nrow=NumHeuristics)
YCoordinates=matrix(0,ncol=length(CategorizeHeuristicErrorData(HeuristicErrors[1,],NumberOfCategories,MaxErrorCategory)$NumberInEachCategory),nrow=NumHeuristics)
#Now categorize the data
for(i in 1:NumHeuristics)
{
if(i==1)
{
#Initialize
Categorized=CategorizeHeuristicErrorData(HeuristicErrors[i,],NumberOfCategories,MaxErrorCategory)
YCoordinates=matrix(0,ncol=length(Categorized$NumberInEachCategory),nrow=NumHeuristics)
XCoordinates=Categorized$CategoryMidPoints
YCoordinates[i,]=Categorized$NumberInEachCategory
YCoordinates[i,]=YCoordinates[i,]/sum(YCoordinates[i,])
Ydataframecol<-data.frame(YCoordinates[i,])
if(is.null(HeuristicNames))
{
names(Ydataframecol)=paste("YCoordinates",toString(i))
}
else
{
names(Ydataframecol)=toString(HeuristicNames[i])
}
XYCoordinates=data.frame(XCoordinates)
XYCoordinates<-cbind(XYCoordinates,Ydataframecol)
}
else
{
Categorized=CategorizeHeuristicErrorData(HeuristicErrors[i,],NumberOfCategories,MaxErrorCategory)
YCoordinates[i,]=Categorized$NumberInEachCategory
YCoordinates[i,]=YCoordinates[i,]/sum(YCoordinates[i,])
Ydataframecol<-data.frame(YCoordinates[i,])
if(is.null(HeuristicNames))
{
names(Ydataframecol)=paste("YCoordinates",toString(i))
}
else
{
names(Ydataframecol)=toString(HeuristicNames[i])
}
XYCoordinates<-cbind(XYCoordinates,Ydataframecol)
}
print(XYCoordinates)
}
#Now we plot the data
DataFrame<-XYCoordinates
print(DataFrame)
MeltedDataFrame<-melt(DataFrame,id="XCoordinates")
print(MeltedDataFrame)
if(SaveTexImage)
{
tikz(file=paste("/local/pmxtol/Dropbox/",toString(FileName),".tex",sep=""),width=Size[1],height=Size[2])
}
Plot<-ggplot(MeltedDataFrame,aes(x=XCoordinates,y=value,color=variable),show.legend='True') + #geom_point()+
geom_line() +xlab("Percentage Error")+ylab("Frequency Density") + scale_color_manual(
"Legend")
if(SaveTexImage)
{
print(Plot)
dev.off()
}
print(Plot)
return(Plot)
}
PlotMultipleHeuristicErrorData(DecodedDataForReport[c(1,3,5),],100,100,c("Depth 1","Depth 2","Depth 3"),SaveTexImage = T,FileName = "OldPlainPenaltyHeuristicOnComplete",Size=c(5,3))
#Plot a group of heuristics
#Note the heuristic erros should be provided in a matrix of rows for each heuristic
PlotMultipleHeuristicErrorData<-function(HeuristicErrors,NumberOfCategories,MaxErrorCategory,HeuristicNames=NULL,SaveTexImage=F,FileName=NULL,Size=c(3,2))
{
#First we look at how many graphs we are going to plot
NumHeuristics=nrow(HeuristicErrors)
XCoordinates=matrix(0,ncol=length(CategorizeHeuristicErrorData(HeuristicErrors[1,],NumberOfCategories,MaxErrorCategory)$NumberInEachCategory),nrow=NumHeuristics)
YCoordinates=matrix(0,ncol=length(CategorizeHeuristicErrorData(HeuristicErrors[1,],NumberOfCategories,MaxErrorCategory)$NumberInEachCategory),nrow=NumHeuristics)
#Now categorize the data
for(i in 1:NumHeuristics)
{
if(i==1)
{
#Initialize
Categorized=CategorizeHeuristicErrorData(HeuristicErrors[i,],NumberOfCategories,MaxErrorCategory)
YCoordinates=matrix(0,ncol=length(Categorized$NumberInEachCategory),nrow=NumHeuristics)
XCoordinates=Categorized$CategoryMidPoints
YCoordinates[i,]=Categorized$NumberInEachCategory
YCoordinates[i,]=YCoordinates[i,]/sum(YCoordinates[i,])
Ydataframecol<-data.frame(YCoordinates[i,])
if(is.null(HeuristicNames))
{
names(Ydataframecol)=paste("YCoordinates",toString(i))
}
else
{
names(Ydataframecol)=toString(HeuristicNames[i])
}
XYCoordinates=data.frame(XCoordinates)
XYCoordinates<-cbind(XYCoordinates,Ydataframecol)
}
else
{
Categorized=CategorizeHeuristicErrorData(HeuristicErrors[i,],NumberOfCategories,MaxErrorCategory)
YCoordinates[i,]=Categorized$NumberInEachCategory
YCoordinates[i,]=YCoordinates[i,]/sum(YCoordinates[i,])
Ydataframecol<-data.frame(YCoordinates[i,])
if(is.null(HeuristicNames))
{
names(Ydataframecol)=paste("YCoordinates",toString(i))
}
else
{
names(Ydataframecol)=toString(HeuristicNames[i])
}
XYCoordinates<-cbind(XYCoordinates,Ydataframecol)
}
print(XYCoordinates)
}
#Now we plot the data
DataFrame<-XYCoordinates
print(DataFrame)
MeltedDataFrame<-melt(DataFrame,id="XCoordinates")
print(MeltedDataFrame)
if(SaveTexImage)
{
tikz(file=paste("/local/pmxtol/Dropbox/",toString(FileName),".tex",sep=""),width=Size[1],height=Size[2])
}
Plot<-ggplot(MeltedDataFrame,aes(x=XCoordinates,y=value,color=variable),show.legend='True') + #geom_point()+
geom_line() +xlab("Percentage Error")+ylab("Frequency Density") + labs(color="Heuristic Type")
if(SaveTexImage)
{
print(Plot)
dev.off()
}
print(Plot)
return(Plot)
}
PlotMultipleHeuristicErrorData(DecodedDataForReport[c(1,3,5),],100,100,c("Depth 1","Depth 2","Depth 3"),SaveTexImage = T,FileName = "OldPlainPenaltyHeuristicOnComplete",Size=c(5,3))
PlotMultipleHeuristicErrorData(DecodedDataForReport[c(5,6),],100,100,c("Old Index Depth 3","New Index Depth 3"),SaveTexImage = T,FileName = "ComparePlainPenaltyHeuristicOnComplete",Size=c(5,3))
PlotMultipleHeuristicErrorData(DecodedDataForReport[c(5,6),],100,100,c("Old Index Depth 3","New Index Depth 3"),SaveTexImage = T,FileName = "ComparePlainPenaltyHeuristicOnComplete",Size=c(5,3))
