CurrentMax=v
}
else
{
return(CurrentMax)
}
}
return(CurrentMax)
}
CreateVMaxVector<-function(n,LambdaVec,bVec,xVec)
{
VMaxVec=vector(length=n)
for(i in 1:n)
{
VMaxVec[i]=FindVMax(LambdaVec[i],bVec[i],xVec[i])
}
return(VMaxVec)
}
Delta<-function(tilde=FALSE,CostAtNode,Lambda,b,x,v,vMax)
{
#First calculate B and the remainder
B=ceiling(x)
R=B-x
if(tilde==FALSE)
{
#Calculate Sum
Sum=Lambda * R * B
Sum=Sum + (v * (B+1-TruncPoissonHazard(Lambda,b,v)))
if(v>0)
{
for(i in 0:(v-1))
{
Sum=Sum- (i * TruncPoissonPMF(Lambda,b,i))
}
}
Sum=CostAtNode * Sum
return (Sum)
}
if(tilde==TRUE)
{
#Now calculate sum
Sum= Lambda * (B + 1 - R + (R-1)*TruncPoissonHazard(Lambda,b,vMax+1))
for(i in 0:vMax)
{
Sum=Sum- (i * TruncPoissonPMF(Lambda,b,i))
}
Sum=CostAtNode * Sum
return(Sum)
}
}
PlainIndexForNode<-function(s,v,Cost,Lambda,b,x,vMax)
{
#First calculate B
B=ceiling(x)
if(s < B)
{
return(0)
}
else if(s==B && v <= vMax)
{
return(Delta(tilde = FALSE,Cost,Lambda,b,x,v,vMax))
}
else if(s==B && v >= (vMax+1))
{
return(Delta(tilde = TRUE,Cost,Lambda,b,x,v,vMax))
}
else
{
return(Delta(tilde = TRUE,Cost,Lambda,b,x,v,vMax))
}
}
EqualStepIndexForNode<-function(s,v,Cost,Lambda,b,x,vMax)
{
#First calculate B
B=ceiling(x)
if(s <= B && v <= vMax)
{
return(Delta(tilde = FALSE,Cost,Lambda,b,x,v,vMax)*(s/B))
}
else if(s <= B && v >=(vMax+1))
{
return(Delta(tilde = TRUE,Cost,Lambda,b,x,v,vMax)*(s/B))
}
else
{
return(Delta(tilde = TRUE,Cost,Lambda,b,x,v,vMax))
}
}
IncreasingStepIndexForNode<-function(s,v,Cost,Lambda,b,x,vMax)
{
#First calculate B
B=ceiling(x)
if(s <= B && v <= vMax)
{
return(Delta(tilde = FALSE,Cost,Lambda,b,x,v,vMax)/(B+1-s))
}
else if(s <= B && v >= (vMax+1))
{
return(Delta(tilde = TRUE,Cost,Lambda,b,x,v,vMax)/(B+1-s))
}
else
{
return(Delta(tilde = TRUE,Cost,Lambda,b,x,v,vMax))
}
}
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(2,4),c(1.2,1.7,2.2,2.7))
IndicesForNodes<-function(n,IndexForNodeFunction,sVec,vVec,CostVec,LambdaVec,bVec,xVec,vMaxVec=NULL)
{
if(is.null(vMaxVec))
{
#Create vMaxVec
vMaxVec=CreateVMaxVector(n,LambdaVec,bVec,xVec)
}
#Now for each node we find its index
Indices=vector(length=n)
for(i in 1:n)
{
Indices[i]=IndexForNodeFunction(sVec[i],vVec[i],CostVec[i],LambdaVec[i],bVec[i],xVec[i],vMaxVec[i])
#print(Indices[i])
}
return(Indices)
}
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(2,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,1,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(2,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,1,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(2,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,2,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(2,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(2,4),c(1.2,1.7,2.2,2.7))
0.2/0.29
0.02/0.29
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(0,4),rep(1/4,4),rep(2,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(0,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(5,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
Delta<-function(tilde=FALSE,CostAtNode,Lambda,b,x,v,vMax)
{
#First calculate B and the remainder
B=ceiling(x)
R=B-x
if(tilde==FALSE)
{
#Calculate Sum
Sum=Lambda * R * B
Sum=Sum + (v * (B+1-TruncPoissonHazard(Lambda,b,v)))
if(v>0)
{
for(i in 0:(v-1))
{
Sum=Sum- (i * TruncPoissonPMF(Lambda,b,i))
}
}
Sum=CostAtNode * Sum
return (Sum)
}
if(tilde==TRUE)
{
#Now calculate sum
Sum= Lambda * (B + 1 - R + (R-1)*TruncPoissonHazard(Lambda,b,v+1))
for(i in 0:v)
{
Sum=Sum- (i * TruncPoissonPMF(Lambda,b,i))
}
Sum=CostAtNode * Sum
return(Sum)
}
}
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
Delta<-function(tilde=FALSE,CostAtNode,Lambda,b,x,v,vMax)
{
#First calculate B and the remainder
B=ceiling(x)
R=B-x
if(tilde==FALSE)
{
#Calculate Sum
Sum=Lambda * R * B
Sum=Sum + (v * (B+1-TruncPoissonHazard(Lambda,b,v)))
if(v>0)
{
for(i in 0:(v-1))
{
Sum=Sum- (i * TruncPoissonPMF(Lambda,b,i))
}
}
Sum=CostAtNode * Sum
return (Sum)
}
if(tilde==TRUE)
{
#Now calculate sum
Sum= Lambda * (B + 1 - R + (R-1)*TruncPoissonHazard(Lambda,b,vMax+1))
for(i in 0:vMax)
{
Sum=Sum- (i * TruncPoissonPMF(Lambda,b,i))
}
Sum=CostAtNode * Sum
return(Sum)
}
}
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
Delta<-function(tilde=FALSE,CostAtNode,Lambda,b,x,v,vMax)
{
#First calculate B and the remainder
B=ceiling(x)
R=B-x
if(tilde==FALSE)
{
#Calculate Sum
Sum=Lambda * R * B
Sum=Sum + (v * (B+1-TruncPoissonHazard(Lambda,b,v)))
if(v>0)
{
for(i in 0:(v-1))
{
Sum=Sum- (i * TruncPoissonPMF(Lambda,b,i))
}
}
Sum=CostAtNode * Sum
return (Sum)
}
if(tilde==TRUE)
{
#Now calculate sum
Sum= Lambda * (B + 1 - R + (R-1)*TruncPoissonHazard(Lambda,b,vMax+1))
for(i in 0:vMax)
{
Sum=Sum- (i * TruncPoissonPMF(Lambda,b,i))
}
Sum=CostAtNode * Sum
return(Sum)
}
}
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
PlainIndexForNode(2,1,1,1/4,1,1.2,0)
PlainIndexForNode(3,0,1,1/4,1,1.7,0)
PlainIndexForNode<-function(s,v,Cost,Lambda,b,x,vMax)
{
#First calculate B
B=ceiling(x)
if(s < B)
{
return(0)
}
else if(s==B && v <= vMax)
{
return(Delta(tilde = FALSE,Cost,Lambda,b,x,v,vMax))
}
else if(s==B && v >= (vMax+1))
{
return(Delta(tilde = FALSE,Cost,Lambda,b,x,v,vMax))
}
else
{
return(Delta(tilde = TRUE,Cost,Lambda,b,x,v,vMax))
}
}
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))#
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))#
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))#
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(10,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(100,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(100,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(110,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(120,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(110,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(110,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(110,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(110,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SolveLP(matrix(rep(1,16),nrow=4,ncol=4),4,c(1.2,1.7,2.2,2.7),rep(1,4),rep(1,4),rep(1/4,4))
0.005/0.283
PlainIndexForNode<-function(s,v,Cost,Lambda,b,x,vMax)
{
#First calculate B
B=ceiling(x)
if(s < B)
{
return(0)
}
else if(s==B && v <= vMax)
{
return(Delta(tilde = FALSE,Cost,Lambda,b,x,v,vMax))
}
else if(s==B && v >= (vMax+1))
{
return(Delta(tilde = TRUE,Cost,Lambda,b,x,v,vMax))
}
else
{
return(Delta(tilde = TRUE,Cost,Lambda,b,x,v,vMax))
}
}
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
PlainIndexForNode<-function(s,v,Cost,Lambda,b,x,vMax)
{
#First calculate B
B=ceiling(x)
if(s < B)
{
return(0)
}
else if(s==B && v <= vMax)
{
return(Delta(tilde = FALSE,Cost,Lambda,b,x,v,vMax))
}
else if(s==B && v >= (vMax+1))
{
return(Delta(tilde = FALSE,Cost,Lambda,b,x,v,vMax))
}
else
{
return(Delta(tilde = TRUE,Cost,Lambda,b,x,v,vMax))
}
}
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(109,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(1,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(3,4),c(1.2,1.7,2.2,2.7))
SolveLP(matrix(rep(1,16),nrow=4,ncol=4),4,c(1.2,1.7,2.2,2.7),rep(3,4),rep(1,4),rep(1/4,4))
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(3,4),c(1.2,1.7,2.2,2.7))
PlainIndexForNode<-function(s,v,Cost,Lambda,b,x,vMax)
{
#First calculate B
B=ceiling(x)
if(s < B)
{
return(0)
}
else if(s==B && v <= vMax)
{
return(Delta(tilde = FALSE,Cost,Lambda,b,x,v,vMax))
}
else if(s==B && v >= (vMax+1))
{
return(Delta(tilde = FALSE,Cost,Lambda,b,x,v,vMax))
}
else
{
return(Delta(tilde = FALSE,Cost,Lambda,b,x,b,vMax))
}
}
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(3,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(3,4),c(1.2,1.7,2.2,2.7))
PlainIndexForNode<-function(s,v,Cost,Lambda,b,x,vMax)
{
#First calculate B
B=ceiling(x)
if(s < B)
{
return(0)
}
else if(s==B && v <= vMax)
{
return(Delta(tilde = FALSE,Cost,Lambda,b,x,v,vMax))
}
else if(s==B && v >= (vMax+1))
{
return(Delta(tilde = FALSE,Cost,Lambda,b,x,v,vMax))
}
else
{
return(Delta(tilde = TRUE,Cost,Lambda,b,x,v,vMax))
}
}
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(3,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),PlainIndexForNode,rep(1,4),rep(1/4,4),rep(3,4),c(1.2,1.7,2.2,2.7))
EqualStepIndexForNode<-function(s,v,Cost,Lambda,b,x,vMax)
{
#First calculate B
B=ceiling(x)
if(s <= B && v <= vMax)
{
return(Delta(tilde = FALSE,Cost,Lambda,b,x,v,vMax)*(s/B))
}
else if(s <= B && v >=(vMax+1))
{
return(Delta(tilde = FALSE,Cost,Lambda,b,x,v,vMax)*(s/B))
}
else
{
return(Delta(tilde = TRUE,Cost,Lambda,b,x,v,vMax))
}
}
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),EqualStepIndexForNode,rep(1,4),rep(1/4,4),rep(3,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),EqualStepIndexForNode,rep(1,4),rep(1/4,4),rep(3,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),EqualStepIndexForNode,rep(1,4),rep(1/4,4),rep(3,4),c(1.2,1.7,2.2,2.7))
SolveLP(matrix(rep(1,16),nrow=4,ncol=4),4,c(1.2,1.7,2.2,2.7),rep(3,4),rep(1,4),rep(1/4,4))
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),EqualStepIndexForNode,rep(1,4),rep(1/4,4),rep(3,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),EqualStepIndexForNode,rep(1,4),rep(1/4,4),rep(3,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,3,MultiStepPenaltyHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),EqualStepIndexForNode,rep(1,4),rep(1/4,4),rep(3,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,3,MultiStepPenaltyHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),EqualStepIndexForNode,rep(1,4),rep(1/4,4),rep(3,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,3,MultiStepPenaltyHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),EqualStepIndexForNode,rep(1,4),rep(1/4,4),rep(3,4),c(1.2,1.7,2.2,2.7))
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),EqualStepIndexForNode,rep(1,4),rep(1/4,4),rep(3,4),c(1.2,1.7,2.2,2.7))
0.005/0.238
SimulationForEvolution(1000,3,MultiStepBenefitHeuristic,4,matrix(rep(1,16),nrow=4,ncol=4,byrow=TRUE),EqualStepIndexForNode,rep(1,4),rep(1/4,4),rep(3,4),c(1.8,1.8,2.8,2.8))
SolveLP(matrix(rep(1,16),nrow=4,ncol=4),4,c(1.8,1.8,2.8,2.8),rep(3,4),rep(1,4),rep(1/4,4))
SolveLP(matrix(rep(1,16),nrow=4,ncol=4),4,c(1.2,1.7,2.2,2.7),rep(3,4),rep(1,4),rep(1/4,4))
