GenerateAdjConnectedMatrix<-function(NumNodes,NumEdges)
{
stopifnot(NumEdges>(NumNodes-1))
AdjacencyMatrix=matrix(0,nrow=NumNodes,ncol=NumNodes)
S=sample.int(NumNodes,size=1)
NS=seq(1,NumNodes,1)
NS=NS[any(NS!=S)]
#We now construct it by connecting
while(length(NS)!=0)
{
#Pick a node at random to be include
NodeToBeAdded=sample(NS,size=1)
#Now pick a random node to connect it to
ConnectionToS=sample(S,size=1)
#Now add this edge into the graph
AdjacencyMatrix[NodeToBeAdded,ConnectionToS]=1
AdjacencyMatrix[ConnectionToS,NodeToBeAdded]=1
#We now removed this node from not selected and add it to selected
S=c(S,NodeToBeAdded)
NS=NS[NS!=NodeToBeAdded]
}
#Now we have a spanning tree, so
NodesNeeded=NumEdges-(NumNodes-1)
Consider=lower.tri(AdjacencyMatrix,diag=FALSE)
#Now we add at random these edges into this random spanning tree
ZerosInMatrix=AdjacencyMatrix[Consider && AdjacencyMatrix==0]
print(Consider)
print(AdjacencyMatrix==0)
print(ZerosInMatrix)
#We now add diagonal ones
for(i in 1:NumNodes)
{
AdjacencyMatrix[i,i]=1
}
return(AdjacencyMatrix)
}
GenerateAdjConnectedMatrix(5,10)
#This functions generates a random adjacency matrix
GenerateAdjConnectedMatrix<-function(NumNodes,NumEdges)
{
stopifnot(NumEdges>(NumNodes-1))
AdjacencyMatrix=matrix(0,nrow=NumNodes,ncol=NumNodes)
S=sample.int(NumNodes,size=1)
NS=seq(1,NumNodes,1)
NS=NS[any(NS!=S)]
#We now construct it by connecting
while(length(NS)!=0)
{
#Pick a node at random to be include
NodeToBeAdded=sample(NS,size=1)
#Now pick a random node to connect it to
ConnectionToS=sample(S,size=1)
#Now add this edge into the graph
AdjacencyMatrix[NodeToBeAdded,ConnectionToS]=1
AdjacencyMatrix[ConnectionToS,NodeToBeAdded]=1
#We now removed this node from not selected and add it to selected
S=c(S,NodeToBeAdded)
NS=NS[NS!=NodeToBeAdded]
}
#Now we have a spanning tree, so
NodesNeeded=NumEdges-(NumNodes-1)
Consider=lower.tri(AdjacencyMatrix,diag=FALSE)
#Now we add at random these edges into this random spanning tree
ZerosInMatrix=AdjacencyMatrix[(Consider) && (AdjacencyMatrix==0)]
print(Consider)
print(AdjacencyMatrix==0)
print(ZerosInMatrix)
#We now add diagonal ones
for(i in 1:NumNodes)
{
AdjacencyMatrix[i,i]=1
}
return(AdjacencyMatrix)
}
GenerateAdjConnectedMatrix(5,10)
M[c(TRUE)]
M
M[M=1]
M[M==1]
M==1
TM=(M==1)
Tm
TM
M[TM]
#This functions generates a random adjacency matrix
GenerateAdjConnectedMatrix<-function(NumNodes,NumEdges)
{
stopifnot(NumEdges>(NumNodes-1))
AdjacencyMatrix=matrix(0,nrow=NumNodes,ncol=NumNodes)
S=sample.int(NumNodes,size=1)
NS=seq(1,NumNodes,1)
NS=NS[any(NS!=S)]
#We now construct it by connecting
while(length(NS)!=0)
{
#Pick a node at random to be include
NodeToBeAdded=sample(NS,size=1)
#Now pick a random node to connect it to
ConnectionToS=sample(S,size=1)
#Now add this edge into the graph
AdjacencyMatrix[NodeToBeAdded,ConnectionToS]=1
AdjacencyMatrix[ConnectionToS,NodeToBeAdded]=1
#We now removed this node from not selected and add it to selected
S=c(S,NodeToBeAdded)
NS=NS[NS!=NodeToBeAdded]
}
#Now we have a spanning tree, so
NodesNeeded=NumEdges-(NumNodes-1)
Consider=lower.tri(AdjacencyMatrix,diag=FALSE)
Consider=Consider && (AdjacencyMatrix==0)
#Now we add at random these edges into this random spanning tree
ZerosInMatrix=AdjacencyMatrix[Consider]
print(Consider)
print(ZerosInMatrix)
#We now add diagonal ones
for(i in 1:NumNodes)
{
AdjacencyMatrix[i,i]=1
}
return(AdjacencyMatrix)
}
GenerateAdjConnectedMatrix(5,10)
#This functions generates a random adjacency matrix
GenerateAdjConnectedMatrix<-function(NumNodes,NumEdges)
{
stopifnot(NumEdges>(NumNodes-1))
AdjacencyMatrix=matrix(0,nrow=NumNodes,ncol=NumNodes)
S=sample.int(NumNodes,size=1)
NS=seq(1,NumNodes,1)
NS=NS[any(NS!=S)]
#We now construct it by connecting
while(length(NS)!=0)
{
#Pick a node at random to be include
NodeToBeAdded=sample(NS,size=1)
#Now pick a random node to connect it to
ConnectionToS=sample(S,size=1)
#Now add this edge into the graph
AdjacencyMatrix[NodeToBeAdded,ConnectionToS]=1
AdjacencyMatrix[ConnectionToS,NodeToBeAdded]=1
#We now removed this node from not selected and add it to selected
S=c(S,NodeToBeAdded)
NS=NS[NS!=NodeToBeAdded]
}
#Now we have a spanning tree, so
NodesNeeded=NumEdges-(NumNodes-1)
Consider=lower.tri(AdjacencyMatrix,diag=FALSE)
Consider=Consider %&&% (AdjacencyMatrix==0)
#Now we add at random these edges into this random spanning tree
ZerosInMatrix=AdjacencyMatrix[Consider]
print(Consider)
print(ZerosInMatrix)
#We now add diagonal ones
for(i in 1:NumNodes)
{
AdjacencyMatrix[i,i]=1
}
return(AdjacencyMatrix)
}
GenerateAdjConnectedMatrix(5,10)
#This functions generates a random adjacency matrix
GenerateAdjConnectedMatrix<-function(NumNodes,NumEdges)
{
stopifnot(NumEdges>(NumNodes-1))
AdjacencyMatrix=matrix(0,nrow=NumNodes,ncol=NumNodes)
S=sample.int(NumNodes,size=1)
NS=seq(1,NumNodes,1)
NS=NS[any(NS!=S)]
#We now construct it by connecting
while(length(NS)!=0)
{
#Pick a node at random to be include
NodeToBeAdded=sample(NS,size=1)
#Now pick a random node to connect it to
ConnectionToS=sample(S,size=1)
#Now add this edge into the graph
AdjacencyMatrix[NodeToBeAdded,ConnectionToS]=1
AdjacencyMatrix[ConnectionToS,NodeToBeAdded]=1
#We now removed this node from not selected and add it to selected
S=c(S,NodeToBeAdded)
NS=NS[NS!=NodeToBeAdded]
}
#Now we have a spanning tree, so
NodesNeeded=NumEdges-(NumNodes-1)
Consider=lower.tri(AdjacencyMatrix,diag=FALSE)
Consider=Consider & (AdjacencyMatrix==0)
#Now we add at random these edges into this random spanning tree
ZerosInMatrix=AdjacencyMatrix[Consider]
print(Consider)
print(ZerosInMatrix)
#We now add diagonal ones
for(i in 1:NumNodes)
{
AdjacencyMatrix[i,i]=1
}
return(AdjacencyMatrix)
}
GenerateAdjConnectedMatrix(5,10)
#This functions generates a random adjacency matrix
GenerateAdjConnectedMatrix<-function(NumNodes,NumEdges)
{
stopifnot(NumEdges>(NumNodes-1))
AdjacencyMatrix=matrix(0,nrow=NumNodes,ncol=NumNodes)
S=sample.int(NumNodes,size=1)
NS=seq(1,NumNodes,1)
NS=NS[any(NS!=S)]
#We now construct it by connecting
while(length(NS)!=0)
{
#Pick a node at random to be include
NodeToBeAdded=sample(NS,size=1)
#Now pick a random node to connect it to
ConnectionToS=sample(S,size=1)
#Now add this edge into the graph
AdjacencyMatrix[NodeToBeAdded,ConnectionToS]=1
AdjacencyMatrix[ConnectionToS,NodeToBeAdded]=1
#We now removed this node from not selected and add it to selected
S=c(S,NodeToBeAdded)
NS=NS[NS!=NodeToBeAdded]
}
#Now we have a spanning tree, so
NodesNeeded=NumEdges-(NumNodes-1)
Consider=lower.tri(AdjacencyMatrix,diag=FALSE)
Consider=Consider & (AdjacencyMatrix==0)
#Now we add at random these edges into this random spanning tree
ZerosInMatrix=which(Consider==TRUE)
print(Consider)
print(ZerosInMatrix)
#We now add diagonal ones
for(i in 1:NumNodes)
{
AdjacencyMatrix[i,i]=1
}
return(AdjacencyMatrix)
}
GenerateAdjConnectedMatrix(5,10)
#This functions generates a random adjacency matrix
GenerateAdjConnectedMatrix<-function(NumNodes,NumEdges)
{
stopifnot(NumEdges>(NumNodes-1))
AdjacencyMatrix=matrix(0,nrow=NumNodes,ncol=NumNodes)
S=sample.int(NumNodes,size=1)
NS=seq(1,NumNodes,1)
NS=NS[any(NS!=S)]
#We now construct it by connecting
while(length(NS)!=0)
{
#Pick a node at random to be include
NodeToBeAdded=sample(NS,size=1)
#Now pick a random node to connect it to
ConnectionToS=sample(S,size=1)
#Now add this edge into the graph
AdjacencyMatrix[NodeToBeAdded,ConnectionToS]=1
AdjacencyMatrix[ConnectionToS,NodeToBeAdded]=1
#We now removed this node from not selected and add it to selected
S=c(S,NodeToBeAdded)
NS=NS[NS!=NodeToBeAdded]
}
#Now we have a spanning tree, so
NodesNeeded=NumEdges-(NumNodes-1)
Consider=lower.tri(AdjacencyMatrix,diag=FALSE)
Consider=Consider & (AdjacencyMatrix==0)
#Now we add at random these edges into this random spanning tree
ZerosInMatrix=which(Consider==TRUE)
#Create a matrix which we will later transpose and add on
AddOn=matrix(0,nrow=NumNodes,ncol=NumNodes)
if(NodesNeeded>0)
{
EdgesToAdd=sample(ZerosInMatrix,size=NodesNeeded)
AddOn[EdgesToAdd]=1
}
AdjacencyMatrix=AdjacencyMatrix %+% AddOn + %+% t(AddOn)
#We now add diagonal ones
for(i in 1:NumNodes)
{
AdjacencyMatrix[i,i]=1
}
return(AdjacencyMatrix)
}
#This functions generates a random adjacency matrix
GenerateAdjConnectedMatrix<-function(NumNodes,NumEdges)
{
stopifnot(NumEdges>(NumNodes-1))
AdjacencyMatrix=matrix(0,nrow=NumNodes,ncol=NumNodes)
S=sample.int(NumNodes,size=1)
NS=seq(1,NumNodes,1)
NS=NS[any(NS!=S)]
#We now construct it by connecting
while(length(NS)!=0)
{
#Pick a node at random to be include
NodeToBeAdded=sample(NS,size=1)
#Now pick a random node to connect it to
ConnectionToS=sample(S,size=1)
#Now add this edge into the graph
AdjacencyMatrix[NodeToBeAdded,ConnectionToS]=1
AdjacencyMatrix[ConnectionToS,NodeToBeAdded]=1
#We now removed this node from not selected and add it to selected
S=c(S,NodeToBeAdded)
NS=NS[NS!=NodeToBeAdded]
}
#Now we have a spanning tree, so
NodesNeeded=NumEdges-(NumNodes-1)
Consider=lower.tri(AdjacencyMatrix,diag=FALSE)
Consider=Consider & (AdjacencyMatrix==0)
#Now we add at random these edges into this random spanning tree
ZerosInMatrix=which(Consider==TRUE)
#Create a matrix which we will later transpose and add on
AddOn=matrix(0,nrow=NumNodes,ncol=NumNodes)
if(NodesNeeded>0)
{
EdgesToAdd=sample(ZerosInMatrix,size=NodesNeeded)
AddOn[EdgesToAdd]=1
}
AdjacencyMatrix=AdjacencyMatrix %+% AddOn %+% t(AddOn)
#We now add diagonal ones
for(i in 1:NumNodes)
{
AdjacencyMatrix[i,i]=1
}
return(AdjacencyMatrix)
}
GenerateAdjConnectedMatrix(5,10)
#This functions generates a random adjacency matrix
GenerateAdjConnectedMatrix<-function(NumNodes,NumEdges)
{
stopifnot(NumEdges>(NumNodes-1))
stopifnot(NumEdges<(NumNodes+1)*(NumNodes/2))
AdjacencyMatrix=matrix(0,nrow=NumNodes,ncol=NumNodes)
S=sample.int(NumNodes,size=1)
NS=seq(1,NumNodes,1)
NS=NS[any(NS!=S)]
#We now construct it by connecting
while(length(NS)!=0)
{
#Pick a node at random to be include
NodeToBeAdded=sample(NS,size=1)
#Now pick a random node to connect it to
ConnectionToS=sample(S,size=1)
#Now add this edge into the graph
AdjacencyMatrix[NodeToBeAdded,ConnectionToS]=1
AdjacencyMatrix[ConnectionToS,NodeToBeAdded]=1
#We now removed this node from not selected and add it to selected
S=c(S,NodeToBeAdded)
NS=NS[NS!=NodeToBeAdded]
}
#Now we have a spanning tree, so
NodesNeeded=NumEdges-(NumNodes-1)
Consider=lower.tri(AdjacencyMatrix,diag=FALSE)
Consider=Consider & (AdjacencyMatrix==0)
#Now we add at random these edges into this random spanning tree
ZerosInMatrix=which(Consider==TRUE)
#Create a matrix which we will later transpose and add on
AddOn=matrix(0,nrow=NumNodes,ncol=NumNodes)
if(NodesNeeded>0)
{
EdgesToAdd=sample(ZerosInMatrix,size=NodesNeeded)
AddOn[EdgesToAdd]=1
}
AdjacencyMatrix=AdjacencyMatrix %+% AddOn %+% t(AddOn)
#We now add diagonal ones
for(i in 1:NumNodes)
{
AdjacencyMatrix[i,i]=1
}
return(AdjacencyMatrix)
}
GenerateAdjConnectedMatrix(5,2)
GenerateAdjConnectedMatrix(5,7)
GenerateAdjConnectedMatrix(5,7)
#This functions generates a random adjacency matrix
GenerateAdjConnectedMatrix<-function(NumNodes,NumEdges)
{
stopifnot(NumEdges>(NumNodes-1))
stopifnot(NumEdges<(NumNodes+1)*(NumNodes/2))
AdjacencyMatrix=matrix(0,nrow=NumNodes,ncol=NumNodes)
S=sample.int(NumNodes,size=1)
NS=seq(1,NumNodes,1)
NS=NS[any(NS!=S)]
#We now construct it by connecting
while(length(NS)!=0)
{
#Pick a node at random to be include
NodeToBeAdded=sample(NS,size=1)
#Now pick a random node to connect it to
ConnectionToS=sample(S,size=1)
#Now add this edge into the graph
AdjacencyMatrix[NodeToBeAdded,ConnectionToS]=1
AdjacencyMatrix[ConnectionToS,NodeToBeAdded]=1
#We now removed this node from not selected and add it to selected
S=c(S,NodeToBeAdded)
NS=NS[NS!=NodeToBeAdded]
}
#Now we have a spanning tree, so
NodesNeeded=NumEdges-(NumNodes-1)
Consider=lower.tri(AdjacencyMatrix,diag=FALSE)
Consider=Consider & (AdjacencyMatrix==0)
#Now we add at random these edges into this random spanning tree
ZerosInMatrix=which(Consider==TRUE)
#Create a matrix which we will later transpose and add on
AddOn=matrix(0,nrow=NumNodes,ncol=NumNodes)
if(NodesNeeded>0)
{
EdgesToAdd=sample(ZerosInMatrix,size=NodesNeeded)
AddOn[EdgesToAdd]=1
}
AdjacencyMatrix=AdjacencyMatrix %+% AddOn %+% t(AddOn)
print(AdjacencyMatrix)
#We now add diagonal ones
for(i in 1:NumNodes)
{
AdjacencyMatrix[i,i]=1
}
return(AdjacencyMatrix)
}
GenerateAdjConnectedMatrix(5,7)
#This functions generates a random adjacency matrix
GenerateAdjConnectedMatrix<-function(NumNodes,NumEdges)
{
stopifnot(NumEdges>(NumNodes-1))
stopifnot(NumEdges<(NumNodes+1)*(NumNodes/2))
AdjacencyMatrix=matrix(0,nrow=NumNodes,ncol=NumNodes)
S=sample.int(NumNodes,size=1)
NS=seq(1,NumNodes,1)
NS=NS[any(NS!=S)]
#We now construct it by connecting
while(length(NS)!=0)
{
#Pick a node at random to be include
NodeToBeAdded=sample(NS,size=1)
#Now pick a random node to connect it to
ConnectionToS=sample(S,size=1)
#Now add this edge into the graph
AdjacencyMatrix[NodeToBeAdded,ConnectionToS]=1
AdjacencyMatrix[ConnectionToS,NodeToBeAdded]=1
#We now removed this node from not selected and add it to selected
S=c(S,NodeToBeAdded)
NS=NS[NS!=NodeToBeAdded]
}
#Now we have a spanning tree, so
NodesNeeded=NumEdges-(NumNodes-1)
Consider=lower.tri(AdjacencyMatrix,diag=FALSE)
Consider=Consider & (AdjacencyMatrix==0)
#Now we add at random these edges into this random spanning tree
ZerosInMatrix=which(Consider==TRUE)
#Create a matrix which we will later transpose and add on
AddOn=matrix(0,nrow=NumNodes,ncol=NumNodes)
if(NodesNeeded>0)
{
EdgesToAdd=sample(ZerosInMatrix,size=NodesNeeded)
AddOn[EdgesToAdd]=1
}
print(AdjacencyMatrix)
print(AddOn)
AdjacencyMatrix=AdjacencyMatrix %+% AddOn %+% t(AddOn)
print(AdjacencyMatrix)
#We now add diagonal ones
for(i in 1:NumNodes)
{
AdjacencyMatrix[i,i]=1
}
return(AdjacencyMatrix)
}
GenerateAdjConnectedMatrix(5,7)
#This functions generates a random adjacency matrix
GenerateAdjConnectedMatrix<-function(NumNodes,NumEdges)
{
stopifnot(NumEdges>(NumNodes-1))
stopifnot(NumEdges<(NumNodes+1)*(NumNodes/2))
AdjacencyMatrix=matrix(0,nrow=NumNodes,ncol=NumNodes)
S=sample.int(NumNodes,size=1)
NS=seq(1,NumNodes,1)
NS=NS[any(NS!=S)]
#We now construct it by connecting
while(length(NS)!=0)
{
#Pick a node at random to be include
NodeToBeAdded=sample(NS,size=1)
#Now pick a random node to connect it to
ConnectionToS=sample(S,size=1)
#Now add this edge into the graph
AdjacencyMatrix[NodeToBeAdded,ConnectionToS]=1
AdjacencyMatrix[ConnectionToS,NodeToBeAdded]=1
#We now removed this node from not selected and add it to selected
S=c(S,NodeToBeAdded)
NS=NS[NS!=NodeToBeAdded]
}
#Now we have a spanning tree, so
NodesNeeded=NumEdges-(NumNodes-1)
Consider=lower.tri(AdjacencyMatrix,diag=FALSE)
Consider=Consider & (AdjacencyMatrix==0)
#Now we add at random these edges into this random spanning tree
ZerosInMatrix=which(Consider==TRUE)
#Create a matrix which we will later transpose and add on
AddOn=matrix(0,nrow=NumNodes,ncol=NumNodes)
if(NodesNeeded>0)
{
EdgesToAdd=sample(ZerosInMatrix,size=NodesNeeded)
AddOn[EdgesToAdd]=1
}
print(AdjacencyMatrix)
print(AddOn)
AdjacencyMatrix=AdjacencyMatrix +AddOn + t(AddOn)
print(AdjacencyMatrix)
#We now add diagonal ones
for(i in 1:NumNodes)
{
AdjacencyMatrix[i,i]=1
}
return(AdjacencyMatrix)
}
GenerateAdjConnectedMatrix(5,7)
